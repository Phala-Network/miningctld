version: '3'

services:
  daemon:
    build:
      context: daemon/.
      dockerfile: controller.testing.Dockerfile
    image: phalanetwork/miningctld-controller:testing
    hostname: daemon
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RACK_ENV=development
      - DATABASE_URL=mysql2://root:miningctl@db:3306/miningctl
      - CIPHER=AES-256-CBC
      - RSA_KEY_SIZE=4096
      - CA_CERT_NAME=/CN=Mining Controller CA/DC=phala
      - DAEMON_CERT_NAME=/CN=Mining Controller Daemon/DC=phala
      - PHALA_NODE_URL_FOR_WORKERS=ws://192.168.89.154:9944
    depends_on:
      - redis
      - db
      - phala-node
      - cproxy
    ports:
      - '9292:9292'
    stdin_open: true
    tty: true

  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    hostname: redis
    volumes:
      - 'redis-data:/data'
    ports:
      - '63791:6379' # debug

  db:
    build: mysql/.
    image: phalanetwork/miningctld-mysql:latest
    hostname: db
    command: [--default-authentication-plugin=mysql_native_password]
    volumes:
      - 'db-data:/var/lib/mysql'
    ports:
      - '33061:3306' # debug
    environment:
      - MYSQL_ROOT_PASSWORD=miningctl
      - MYSQL_DATABASE=miningctl

  phala-node:
    image: phalanetwork/phala-poc3-node:latest
    hostname: phala-node
    environment:
      - NODE_NAME=phala-dev-mining
    volumes:
      - 'node-data:/root/data'

  cproxy:
    build:
      context: cproxy/.
      dockerfile: testing.Dockerfile
    image: phalanetwork/miningctld-cproxy:testing
    hostname: cproxy
    environment: []
    depends_on:
      - redis
      - phala-node
    ports:
      - '9229:9229' # debug
      - '7070:7070' # debug

volumes:
  db-data:
  redis-data:
  node-data:

